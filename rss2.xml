<?xml version="1.0" encoding="utf-8"?>
<rss version="2.0"
  xmlns:atom="http://www.w3.org/2005/Atom"
  xmlns:content="http://purl.org/rss/1.0/modules/content/">
  <channel>
    <title>Dnocm ☀</title>
    <link>https://jiangtj.com/</link>
    
    <atom:link href="https://jiangtj.com/rss2.xml" rel="self" type="application/rss+xml"/>
    
    <description>何须更问浮生事，只此浮生是梦中</description>
    <pubDate>Tue, 11 Apr 2023 12:13:14 GMT</pubDate>
    <generator>http://hexo.io/</generator>
    
    <item>
      <title>Spring Boot 自定义 Endpoint</title>
      <link>https://jiangtj.com/articles/durian/custom-endpoint/</link>
      <guid>https://jiangtj.com/articles/durian/custom-endpoint/</guid>
      <pubDate>Tue, 11 Apr 2023 12:13:14 GMT</pubDate>
      
      <description>&lt;h1 id=&quot;介绍&quot; class=&quot;article-heading&quot;&gt;&lt;a href=&quot;#介绍&quot; class=&quot;headerlink&quot; title=&quot;介绍&quot;&gt;&lt;/a&gt;介绍&lt;a class=&quot;article-anchor&quot; href=&quot;#介绍&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;&lt;/h1&gt;&lt;p&gt;下面是AI的介绍，如果你很了解可以直接跳到第二部分&lt;/p&gt;
&lt;p&gt;在 Spring Boot 中，Endpoint 是一种可以暴露应用程序内部信息的机制。Endpoint 可以提供应用程序的健康状况、内存使用情况、线程信息、日志等等信息。通过访问这些 Endpoint，我们可以更加方便地了解应用程序的运行情况，进行问题排查和监控。&lt;/p&gt;
&lt;p&gt;Spring Boot 提供了一些内置的 Endpoint，比如 &amp;#x2F;health、&amp;#x2F;metrics 等等，同时也支持自定义 Endpoint。我们可以通过在应用程序中添加 Spring Boot Actuator 依赖来启用这些内置的 Endpoint，也可以通过编写自定义 Endpoint 来扩展应用程序的监控能力。&lt;/p&gt;
&lt;p&gt;一般来说，Endpoint 都是通过 HTTP 协议暴露出来的，可以通过浏览器、curl 命令等方式进行访问。同时，Spring Boot 还支持将 Endpoint 信息输出到控制台、JMX 等地方，方便我们查看。&lt;/p&gt;
&lt;p&gt;在访问 Endpoint 时，我们需要提供正确的访问路径和身份验证信息（如果启用了身份验证）。Spring Boot 提供了许多安全措施来保护 Endpoint 的访问，比如只允许特定 IP 地址访问、启用 HTTPS 等等。&lt;/p&gt;
&lt;p&gt;总之，Endpoint 是 Spring Boot 中非常重要的一个功能，可以帮助我们更加方便地监控和管理应用程序。如果您还没有使用过 Endpoint，建议您尝试一下，相信会有不错的体验。&lt;/p&gt;</description>
      
      
      
      
      <category domain="https://jiangtj.com/categories/%E5%90%8E%E7%AB%AF/">后端</category>
      
      
      <category domain="https://jiangtj.com/tags/Spring/">Spring</category>
      
      
      <comments>https://jiangtj.com/articles/durian/custom-endpoint/#disqus_thread</comments>
      
    </item>
    
    <item>
      <title>Spring Cloud 平台搭建(四)：Spring Boot Admin</title>
      <link>https://jiangtj.com/articles/durian/cloud-4/</link>
      <guid>https://jiangtj.com/articles/durian/cloud-4/</guid>
      <pubDate>Fri, 07 Apr 2023 06:21:38 GMT</pubDate>
      
      <description>&lt;blockquote&gt;
&lt;p&gt;源码：&lt;a href=&quot;https://github.com/jiangtj/jc-platform&quot;&gt;J Cloud Platform&lt;/a&gt;，期待你们的star ٩(๑❛ᴗ❛๑)۶&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;Spring Boot Admin 是简单，同时功能也比较全面的监控服务，所以对于快速搭建微服务框架来说，是最佳的。比如 ELK Stack 能更好的处理日志，以及一些运行数据，但是，他需要配置，同时，对于少量的微服务显得笨重，而且后期加难度也不大。&lt;/p&gt;
&lt;p&gt;老规矩，先让AI介绍下概念，这是换成了Notion AI，我也不知道为啥我bing用不了了。。。&lt;/p&gt;
&lt;h1 id=&quot;概念&quot; class=&quot;article-heading&quot;&gt;&lt;a href=&quot;#概念&quot; class=&quot;headerlink&quot; title=&quot;概念&quot;&gt;&lt;/a&gt;概念&lt;a class=&quot;article-anchor&quot; href=&quot;#概念&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;&lt;/h1&gt;&lt;p&gt;Spring Boot Admin是一个开源的第三方监控工具，可以用于管理和监控Spring Boot应用程序。它提供了一个简单易用的Web用户界面，让开发者可以轻松地查看应用程序的运行状况、性能指标、日志信息等。&lt;/p&gt;</description>
      
      
      
      
      <category domain="https://jiangtj.com/categories/%E5%90%8E%E7%AB%AF/">后端</category>
      
      
      <category domain="https://jiangtj.com/tags/Spring-Cloud-%E5%B9%B3%E5%8F%B0%E6%90%AD%E5%BB%BA/">Spring Cloud 平台搭建</category>
      
      
      <comments>https://jiangtj.com/articles/durian/cloud-4/#disqus_thread</comments>
      
    </item>
    
    <item>
      <title>Spring Cloud 平台搭建(三)：更换 Spring Cloud Tencent</title>
      <link>https://jiangtj.com/articles/durian/cloud-3/</link>
      <guid>https://jiangtj.com/articles/durian/cloud-3/</guid>
      <pubDate>Wed, 29 Mar 2023 16:00:00 GMT</pubDate>
      
      <description>&lt;blockquote&gt;
&lt;p&gt;配套源码：&lt;a href=&quot;https://github.com/jiangtj/jc-platform&quot;&gt;J Cloud Platform&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;Spring Cloud Tencent 与 Spring Cloud Alibaba 的差别如下&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;input checked=&quot;&quot; disabled=&quot;&quot; type=&quot;checkbox&quot;&gt; 配置中心 支持配置属性更新回调&lt;/li&gt;
&lt;li&gt;&lt;input disabled=&quot;&quot; type=&quot;checkbox&quot;&gt; 配置中心 支持 import，但仍必须配置bootsrap.yaml&lt;/li&gt;
&lt;li&gt;&lt;input checked=&quot;&quot; disabled=&quot;&quot; type=&quot;checkbox&quot;&gt; 控制台 内存占用小于nacos，对于我来说，开发电脑配置不太够，能好些&lt;/li&gt;
&lt;li&gt;&lt;input checked=&quot;&quot; disabled=&quot;&quot; type=&quot;checkbox&quot;&gt; 集成类似于阿里Sentinel的功能&lt;/li&gt;
&lt;li&gt;&lt;input disabled=&quot;&quot; type=&quot;checkbox&quot;&gt; 默认占用常用端口，比如8080、8090&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;各有优劣，不过我更倾向于腾讯，所以做了替换&lt;/p&gt;</description>
      
      
      
      
      <category domain="https://jiangtj.com/categories/%E5%90%8E%E7%AB%AF/">后端</category>
      
      
      <category domain="https://jiangtj.com/tags/Spring-Cloud-%E5%B9%B3%E5%8F%B0%E6%90%AD%E5%BB%BA/">Spring Cloud 平台搭建</category>
      
      
      <comments>https://jiangtj.com/articles/durian/cloud-3/#disqus_thread</comments>
      
    </item>
    
    <item>
      <title>GraalVM 构建 Spring Native 应用</title>
      <link>https://jiangtj.com/articles/durian/spring-native/</link>
      <guid>https://jiangtj.com/articles/durian/spring-native/</guid>
      <pubDate>Tue, 28 Mar 2023 01:33:31 GMT</pubDate>
      
      <description>Win 平台下构建 Spring Native 应用</description>
      
      
      
      
      <category domain="https://jiangtj.com/categories/%E5%90%8E%E7%AB%AF/">后端</category>
      
      
      <category domain="https://jiangtj.com/tags/Spring-Native/">Spring Native</category>
      
      <category domain="https://jiangtj.com/tags/GraalVM/">GraalVM</category>
      
      
      <comments>https://jiangtj.com/articles/durian/spring-native/#disqus_thread</comments>
      
    </item>
    
    <item>
      <title>Spring Cloud 平台搭建(二)：统一异常处理 RFC 7807</title>
      <link>https://jiangtj.com/articles/durian/cloud-2/</link>
      <guid>https://jiangtj.com/articles/durian/cloud-2/</guid>
      <pubDate>Wed, 22 Mar 2023 02:59:02 GMT</pubDate>
      
      <description>&lt;p&gt;兄弟们，上强度啦，你们觉得微服务搭建过程什么最重要？说实话，我也不清楚，但是我知道，规范一定是最重要的那部分之一&lt;/p&gt;
&lt;h1 id=&quot;RFC-7807-定义&quot; class=&quot;article-heading&quot;&gt;&lt;a href=&quot;#RFC-7807-定义&quot; class=&quot;headerlink&quot; title=&quot;RFC 7807 定义&quot;&gt;&lt;/a&gt;RFC 7807 定义&lt;a class=&quot;article-anchor&quot; href=&quot;#RFC-7807-定义&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;&lt;/h1&gt;&lt;p&gt;微服务规范最重要的就是服务间的调用，目前来说绝大多数都是restful接口，请求成功直接会返回业务数据，失败的话，一般都是抛出运行时异常，并统一捕获转化为对应的http状态码以及描述错误Json内容，这部分一般都是自定义的，但最近我看到了Spring最新官方文档其中Error Responses部分&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&quot;https://raw.githubusercontent.com/jiangtj/picgo-repo/master/img-a20230323142900.png&quot;&gt;&lt;/p&gt;
&lt;p&gt;是的，错误部分也有了一个规范，它包含五个部分&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;type: 问题描述文档地址，如果不存在，则”about:blank”&lt;/li&gt;
&lt;li&gt;title: 简短的描述问题&lt;/li&gt;
&lt;li&gt;status: http 状态码，比如400、401、500等&lt;/li&gt;
&lt;li&gt;detail: 详细说明发生问题的原因&lt;/li&gt;
&lt;li&gt;instance: 问题发生的URL地址&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;这个和我原本自定义的错误内容差不多，所以，在这次搭建过程中，就使用了规范的定义，接下来就介绍我的开源项目&lt;a href=&quot;https://github.com/jiangtj/jc-platform&quot;&gt;J Cloud Platform&lt;/a&gt;中&lt;code&gt;micro-common&lt;/code&gt;模块&lt;/p&gt;</description>
      
      
      
      
      <category domain="https://jiangtj.com/categories/%E5%90%8E%E7%AB%AF/">后端</category>
      
      
      <category domain="https://jiangtj.com/tags/Spring-Cloud-%E5%B9%B3%E5%8F%B0%E6%90%AD%E5%BB%BA/">Spring Cloud 平台搭建</category>
      
      
      <comments>https://jiangtj.com/articles/durian/cloud-2/#disqus_thread</comments>
      
    </item>
    
    <item>
      <title>Spring Cloud 平台搭建(一)：服务注册与配置中心Nacos</title>
      <link>https://jiangtj.com/articles/durian/cloud-1/</link>
      <guid>https://jiangtj.com/articles/durian/cloud-1/</guid>
      <pubDate>Tue, 21 Mar 2023 13:35:15 GMT</pubDate>
      
      <description>&lt;h1 id=&quot;Nacos-是什么？&quot; class=&quot;article-heading&quot;&gt;&lt;a href=&quot;#Nacos-是什么？&quot; class=&quot;headerlink&quot; title=&quot;Nacos 是什么？&quot;&gt;&lt;/a&gt;Nacos 是什么？&lt;a class=&quot;article-anchor&quot; href=&quot;#Nacos-是什么？&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;&lt;/h1&gt;&lt;p&gt;Nacos 是一个易用的动态服务发现、配置和服务管理平台，可以帮助你在云原生时代，轻松构建、交付、管理自己的微服务平台，快速复用和组合业务服务，快速交付商业创新的价值。&lt;/p&gt;
&lt;p&gt;Nacos 是阿里巴巴开源的一个项目，它的名字来源于Na ming and Co nfiguration S ervice。nacos提供了以下几个核心功能：&lt;/p&gt;
&lt;p&gt;Nacos 提供了以下主要功能：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;动态服务发现&lt;/strong&gt;：Nacos 可以让你注册和发现各种类型的微服务，包括 HTTP、RPC 和 WebSocket 等，并提供负载均衡、流量控制和故障转移等能力。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;动态配置管理&lt;/strong&gt;：Nacos 可以让你集中管理应用的配置信息，并支持配置变更推送、版本控制和灰度发布等功能。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;动态 DNS 服务&lt;/strong&gt;：Nacos 可以让你基于权重路由请求到不同的后端集群，并支持域名解析、健康检查和故障隔离等功能。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;服务及其元数据管理&lt;/strong&gt;：Nacos 可以让你存储和查询微服务及其元数据信息，并支持元数据驱动的开发模式。&lt;/li&gt;
&lt;/ul&gt;
&lt;h1 id=&quot;为什么要使用-Nacos？&quot; class=&quot;article-heading&quot;&gt;&lt;a href=&quot;#为什么要使用-Nacos？&quot; class=&quot;headerlink&quot; title=&quot;为什么要使用 Nacos？&quot;&gt;&lt;/a&gt;为什么要使用 Nacos？&lt;a class=&quot;article-anchor&quot; href=&quot;#为什么要使用-Nacos？&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;&lt;/h1&gt;&lt;p&gt;在微服务架构中，我们需要解决以下几个问题：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;如何发现和调用其他微服务？&lt;/li&gt;
&lt;li&gt;如何管理微服务之间的依赖关系？&lt;/li&gt;
&lt;li&gt;如何动态调整微服务的配置？&lt;/li&gt;
&lt;li&gt;如何保证微服务之间的高可用性和弹性？&lt;/li&gt;
&lt;li&gt;如何实现微服务之间的分布式事务？&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;这些问题都需要一个强大而灵活的中间件来支撑。而 Nacos 正是这样一个中间件，它可以为我们提供一站式的解决方案。&lt;/p&gt;</description>
      
      
      
      
      <category domain="https://jiangtj.com/categories/%E5%90%8E%E7%AB%AF/">后端</category>
      
      
      <category domain="https://jiangtj.com/tags/Spring-Cloud-%E5%B9%B3%E5%8F%B0%E6%90%AD%E5%BB%BA/">Spring Cloud 平台搭建</category>
      
      
      <comments>https://jiangtj.com/articles/durian/cloud-1/#disqus_thread</comments>
      
    </item>
    
    <item>
      <title>Spring Cloud 平台搭建(序)：聊一聊与做些准备</title>
      <link>https://jiangtj.com/articles/durian/cloud-0/</link>
      <guid>https://jiangtj.com/articles/durian/cloud-0/</guid>
      <pubDate>Tue, 21 Mar 2023 06:32:15 GMT</pubDate>
      
      <description>&lt;h1 id=&quot;开场白&quot; class=&quot;article-heading&quot;&gt;&lt;a href=&quot;#开场白&quot; class=&quot;headerlink&quot; title=&quot;开场白&quot;&gt;&lt;/a&gt;开场白&lt;a class=&quot;article-anchor&quot; href=&quot;#开场白&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;&lt;/h1&gt;&lt;p&gt;学技术的我相信绝大部分都是理科生，和一样，写博客会很为难，不知道怎么开场，但救星来了，那就是ChatGPT，当然，我这里不是（需要填手机号，然后提示不提供服务，哎），是new bing生成的，让我们欣赏下AI吧&lt;/p&gt;
&lt;p&gt;你好，欢迎来到我的博客。今天我想和大家聊一聊spring cloud，这是一个基于spring boot的微服务框架，它提供了一系列的组件和工具，让我们可以快速地开发和部署分布式系统。&lt;/p&gt;
&lt;p&gt;什么是微服务呢？简单地说，就是把一个大型的单体应用拆分成多个小的、独立的、可复用的服务，每个服务负责一个特定的功能或业务领域，它们之间通过轻量级的通信协议进行交互。这样做有什么好处呢？主要有以下几点：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;可扩展性：当某个服务需要扩容或缩容时，我们只需要对该服务进行操作，而不影响其他服务。&lt;/li&gt;
&lt;li&gt;灵活性：当某个服务需要更新或替换时，我们只需要对该服务进行操作，而不影响其他服务。&lt;/li&gt;
&lt;li&gt;容错性：当某个服务出现故障时，我们可以快速地恢复或切换到备用方案，而不影响其他服务。&lt;/li&gt;
&lt;li&gt;解耦性：每个服务都有自己的数据存储和业务逻辑，它们之间通过定义好的接口进行交互，这样可以降低耦合度和依赖性。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;当然，微服务也有一些挑战和问题，比如：&lt;/p&gt;</description>
      
      
      
      
      <category domain="https://jiangtj.com/categories/%E5%90%8E%E7%AB%AF/">后端</category>
      
      
      <category domain="https://jiangtj.com/tags/Spring-Cloud-%E5%B9%B3%E5%8F%B0%E6%90%AD%E5%BB%BA/">Spring Cloud 平台搭建</category>
      
      
      <comments>https://jiangtj.com/articles/durian/cloud-0/#disqus_thread</comments>
      
    </item>
    
    <item>
      <title>在 Docker 中使用 Hexo</title>
      <link>https://jiangtj.com/articles/cherry/docker-dev/</link>
      <guid>https://jiangtj.com/articles/cherry/docker-dev/</guid>
      <pubDate>Thu, 09 Mar 2023 00:09:49 GMT</pubDate>
      
        
        
          
          
      <description>&lt;p&gt;在项目的根目录创建一个 &lt;code&gt;compose-dev.yaml&lt;/code&gt; 定义docker compose用于生成开发环境，由于博客不需要额外的数据库等，所以很简单&lt;/p&gt;
&lt;figure class=&quot;highlight</description>
          
        
      
      
      
      
      
      
      <comments>https://jiangtj.com/articles/cherry/docker-dev/#disqus_thread</comments>
      
    </item>
    
    <item>
      <title>使用 Helm 管理开发环境</title>
      <link>https://jiangtj.com/articles/cherry/helm-for-dev/</link>
      <guid>https://jiangtj.com/articles/cherry/helm-for-dev/</guid>
      <pubDate>Thu, 23 Feb 2023 03:25:11 GMT</pubDate>
      
      <description>helm来管理开发环境会不会比docker更方便呢</description>
      
      
      
      
      <category domain="https://jiangtj.com/categories/%E8%BF%90%E7%BB%B4/">运维</category>
      
      
      
      <comments>https://jiangtj.com/articles/cherry/helm-for-dev/#disqus_thread</comments>
      
    </item>
    
    <item>
      <title>linux 代理</title>
      <link>https://jiangtj.com/articles/cherry/linux-proxy/</link>
      <guid>https://jiangtj.com/articles/cherry/linux-proxy/</guid>
      <pubDate>Tue, 21 Feb 2023 08:32:26 GMT</pubDate>
      
        
        
          
          
      <description>&lt;h1 id=&quot;env&quot; class=&quot;article-heading&quot;&gt;&lt;a href=&quot;#env&quot; class=&quot;headerlink&quot; title=&quot;env&quot;&gt;&lt;/a&gt;env&lt;a class=&quot;article-anchor&quot; href=&quot;#env&quot;</description>
          
        
      
      
      
      
      <category domain="https://jiangtj.com/categories/%E8%BF%90%E7%BB%B4/">运维</category>
      
      
      
      <comments>https://jiangtj.com/articles/cherry/linux-proxy/#disqus_thread</comments>
      
    </item>
    
    <item>
      <title>为 Spring WebFlux 提供 &#39;ApplicationEventPublisher&#39;</title>
      <link>https://jiangtj.com/articles/cherry/webflux-event/</link>
      <guid>https://jiangtj.com/articles/cherry/webflux-event/</guid>
      <pubDate>Fri, 24 Sep 2021 08:15:07 GMT</pubDate>
      
      <description>&lt;p&gt;在 Spring 中提供了 ApplicationEventPublisher，用于发布事件，这在一些场景下十分有用，比如，当我创建一个货物，而另一个服务监听货物的创建并为其创建库存。所以在Spring MVC中很实用，我也常常用它来解耦，但是当我切换为 WebFlux 时，就尴尬了。因为 ApplicationEventPublisher 是同步操作，它并不支持响应式，即流操作。&lt;/p&gt;
&lt;p&gt;所以，我在 WebFlux 中实现一个类似的发布订阅模式，以替代 ApplicationEventPublisher&lt;/p&gt;</description>
      
      
      
      
      <category domain="https://jiangtj.com/categories/%E5%90%8E%E7%AB%AF/">后端</category>
      
      
      <category domain="https://jiangtj.com/tags/WebFlux/">WebFlux</category>
      
      <category domain="https://jiangtj.com/tags/Event/">Event</category>
      
      
      <comments>https://jiangtj.com/articles/cherry/webflux-event/#disqus_thread</comments>
      
    </item>
    
    <item>
      <title>WinGet Windows官方的包管理工具</title>
      <link>https://jiangtj.com/articles/cherry/winget/</link>
      <guid>https://jiangtj.com/articles/cherry/winget/</guid>
      <pubDate>Thu, 01 Jul 2021 12:54:09 GMT</pubDate>
      
      <description>当你重装电脑的时候，这或许能让你最快进入状态</description>
      
      
      
      
      <category domain="https://jiangtj.com/categories/%E5%B7%A5%E5%85%B7/">工具</category>
      
      
      
      <comments>https://jiangtj.com/articles/cherry/winget/#disqus_thread</comments>
      
    </item>
    
    <item>
      <title>R2DBC-传统数据库也能响应式编程</title>
      <link>https://jiangtj.com/articles/cherry/r2dbc/</link>
      <guid>https://jiangtj.com/articles/cherry/r2dbc/</guid>
      <pubDate>Tue, 20 Apr 2021 08:44:55 GMT</pubDate>
      
      <description>&lt;p&gt;R2DBC 是 Reactive Relational Database Connectivity （关系型数据库的响应式连接） 的缩写，最近在项目中尝试 Webflux，被迫，使用 R2DBC 进行数据库操作（我还是更喜欢关系型数据库而不是文档型）。当然在实际使用后，发现这个框架虽然有些不足，但这才是我喜欢的DB框架&lt;/p&gt;
&lt;p&gt;这里零散的记录下我遇到的一些问题，或者钟爱的一些特性，或者自己写的小工具&lt;/p&gt;</description>
      
      
      
      
      <category domain="https://jiangtj.com/categories/%E5%90%8E%E7%AB%AF/">后端</category>
      
      
      <category domain="https://jiangtj.com/tags/Webflux/">Webflux</category>
      
      <category domain="https://jiangtj.com/tags/R2DBC/">R2DBC</category>
      
      
      <comments>https://jiangtj.com/articles/cherry/r2dbc/#disqus_thread</comments>
      
    </item>
    
    <item>
      <title>Spring Boot 2.4 新的配置文件处理方式</title>
      <link>https://jiangtj.com/articles/cherry/spring-boot-2-4-config/</link>
      <guid>https://jiangtj.com/articles/cherry/spring-boot-2-4-config/</guid>
      <pubDate>Tue, 16 Mar 2021 05:38:27 GMT</pubDate>
      
      <description>&lt;p&gt;配置文件是 Spring Boot 的一个核心特性，自正式版发布以来，几乎未改动过，而在2.4中，Spring 官方调整了配置文件的处理逻辑&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;外部配置文件优先于内部 Profile 配置&lt;/li&gt;
&lt;li&gt;重命名 &lt;code&gt;spring.profiles&lt;/code&gt; 为 &lt;code&gt;spring.config.activate.on-profile&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;新增 Profile 组&lt;/li&gt;
&lt;/ul&gt;</description>
      
      
      
      
      
      
      <comments>https://jiangtj.com/articles/cherry/spring-boot-2-4-config/#disqus_thread</comments>
      
    </item>
    
    <item>
      <title>NPM 包代理</title>
      <link>https://jiangtj.com/articles/cherry/npm-pack-proxy/</link>
      <guid>https://jiangtj.com/articles/cherry/npm-pack-proxy/</guid>
      <pubDate>Fri, 29 Jan 2021 07:57:56 GMT</pubDate>
      
        
        
          
          
      <description>&lt;p&gt;在国外，最简单的是安装，在国内，最难得就是安装，太难了&lt;/p&gt;
&lt;p&gt;下面是一份我正在用的&lt;code&gt;.yarnrc&lt;/code&gt;的配置&lt;/p&gt;
&lt;figure class=&quot;highlight plaintext&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td</description>
          
        
      
      
      
      
      
      
      <comments>https://jiangtj.com/articles/cherry/npm-pack-proxy/#disqus_thread</comments>
      
    </item>
    
    <item>
      <title>部署 Spring Boot 应用为 systemd 服务</title>
      <link>https://jiangtj.com/articles/cherry/deploy-spring-boot/</link>
      <guid>https://jiangtj.com/articles/cherry/deploy-spring-boot/</guid>
      <pubDate>Wed, 20 Jan 2021 06:21:46 GMT</pubDate>
      
      <description>&lt;p&gt;很久之前，我写过一个&lt;a href=&quot;https://dnocm.com/articles/almond/spring-boot-autorun-with-gitlab/&quot;&gt;脚本&lt;/a&gt;用于重启Spring Boot应用，但最近在看Spring Boot文档，发现之前写的的确不够优雅&lt;/p&gt;
&lt;p&gt;Spring Boot 文档中，有一大章专门写&lt;a href=&quot;https://docs.spring.io/spring-boot/docs/current/reference/html/deployment.html#deployment&quot;&gt;关于如何在系统中部署&lt;/a&gt;，其中，个人认为最佳的方案是作为一个systemd服务运行，由Liunx服务直接调度&lt;/p&gt;</description>
      
      
      
      
      <category domain="https://jiangtj.com/categories/%E5%90%8E%E7%AB%AF/">后端</category>
      
      
      <category domain="https://jiangtj.com/tags/Java/">Java</category>
      
      
      <comments>https://jiangtj.com/articles/cherry/deploy-spring-boot/#disqus_thread</comments>
      
    </item>
    
    <item>
      <title>Flutter 环境搭建注意事项</title>
      <link>https://jiangtj.com/articles/cherry/flutter-install/</link>
      <guid>https://jiangtj.com/articles/cherry/flutter-install/</guid>
      <pubDate>Fri, 28 Aug 2020 08:21:58 GMT</pubDate>
      
      <description>Flutter 是谷歌推出的，用于构建跨平台原生应用</description>
      
      
      
      
      <category domain="https://jiangtj.com/categories/%E5%89%8D%E7%AB%AF/">前端</category>
      
      
      <category domain="https://jiangtj.com/tags/Dart/">Dart</category>
      
      <category domain="https://jiangtj.com/tags/Flutter/">Flutter</category>
      
      <category domain="https://jiangtj.com/tags/Android/">Android</category>
      
      
      <comments>https://jiangtj.com/articles/cherry/flutter-install/#disqus_thread</comments>
      
    </item>
    
    <item>
      <title>Hexo 5.0.0 正式发布</title>
      <link>https://jiangtj.com/articles/cherry/hexo-5/</link>
      <guid>https://jiangtj.com/articles/cherry/hexo-5/</guid>
      <pubDate>Tue, 25 Aug 2020 01:43:40 GMT</pubDate>
      
      <description>文章转载自&lt;a href=&quot;https://blog.skk.moe/post/hexo-5/&quot;&gt;Sukka&lt;/a&gt;，Sukka为hexo 5.0带来了许多特性🎉</description>
      
      
      
      
      <category domain="https://jiangtj.com/categories/%E8%BD%AC%E8%BD%BD/">转载</category>
      
      
      
      <comments>https://jiangtj.com/articles/cherry/hexo-5/#disqus_thread</comments>
      
    </item>
    
    <item>
      <title>Gradle 初探</title>
      <link>https://jiangtj.com/articles/cherry/gradle-start/</link>
      <guid>https://jiangtj.com/articles/cherry/gradle-start/</guid>
      <pubDate>Wed, 17 Jun 2020 01:46:00 GMT</pubDate>
      
      <description>跟我一起，学透它~~~</description>
      
      
      
      
      <category domain="https://jiangtj.com/categories/%E5%90%8E%E7%AB%AF/">后端</category>
      
      
      <category domain="https://jiangtj.com/tags/Java/">Java</category>
      
      <category domain="https://jiangtj.com/tags/Gradle/">Gradle</category>
      
      
      <comments>https://jiangtj.com/articles/cherry/gradle-start/#disqus_thread</comments>
      
    </item>
    
    <item>
      <title>新网址！</title>
      <link>https://jiangtj.com/articles/cherry/new-deploy/</link>
      <guid>https://jiangtj.com/articles/cherry/new-deploy/</guid>
      <pubDate>Tue, 19 May 2020 05:29:58 GMT</pubDate>
      
        
        
          
          
      <description>&lt;p&gt;netlify免费版的网络真的太差了（跟1年多前刚使用的时候比，差太多），所以原本打算迁移到github pages&lt;/p&gt;
&lt;p&gt;看对比，github</description>
          
        
      
      
      
      
      
      
      <comments>https://jiangtj.com/articles/cherry/new-deploy/#disqus_thread</comments>
      
    </item>
    
  </channel>
</rss>
